import {
  type GetServerSidePropsContext,
  type InferGetServerSidePropsType,
  type NextPage,
} from "next";
import Head from "next/head";
import { generateSSGHelper } from "~/server/api/ssgHelper";
import { api } from "~/utils/api";

const ProfilePage: NextPage<InferGetServerSidePropsType<typeof getServerSideProps>> = (
  props,
) => {
  const { username } = props;

  const { data } = api.user.getUserByUsername.useQuery(
    { username },
    {
      refetchOnWindowFocus: false,
    },
  );
  return (
    <>
      <Head>
        <title>
          {data?.namaSiswa} (@{data?.username}) | Mading Skanic
        </title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <p>ID: {data?.id}</p>
        <p>Nama Lengkap: {data?.namaSiswa}</p>
        <p>Username: {data?.username}</p>
        <p>Email: {data?.email}</p>
        <p>Role: {data?.role}</p>
      </div>
    </>
  );
};

export default ProfilePage;

export const getServerSideProps = async (
  ctx: GetServerSidePropsContext<{ username: string }>,
) => {
  const { req, res } = ctx;

  const ssg = await generateSSGHelper({ req, res });
  // eslint-disable-next-line @typescript-eslint/non-nullable-type-assertion-style
  const username = ctx.params?.username as string;

  await ssg.user.getUserByUsername.prefetch({
    username,
  });

  return {
    props: {
      trpcState: ssg.dehydrate(),
      username,
    },
  };
};
